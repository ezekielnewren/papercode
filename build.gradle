/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3/userguide/java_library_plugin.html
 */

plugins {
    id 'com.palantir.git-version' version '0.11.0'
}

apply plugin: 'java-library'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'

version gitVersion()
libsDirName = 'libs' // relative to $projectDir/build default 'libs'
mainClassName = "com.ezekielnewren.papercode.Driver"

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // compile group: '', name: '', version: ''
    
    // APACHE
	compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.1'
	compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.7' 
	compile group: 'commons-io', name: 'commons-io', version: '2.5'
    
    // https://logging.apache.org/log4j/2.x/maven-artifacts.html
	compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.11.0'
	compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.0'
	
	// GOOGLE
	compile group: 'com.google.guava', name: 'guava', version: '21.0'
    
    // CRYPTO
    compile group: 'org.bouncycastle', name: 'bcpkix-jdk15on', version: '1.55'

    // ZXING
    compile group: 'com.google.zxing', name: 'core', version: '3.3.2'
    compile group: 'com.google.zxing', name: 'javase', version: '3.3.2'

    // OTHER
    compile group: 'com.github.sarxos', name: 'webcam-capture', version: '0.3.12'
    
}

task about (dependsOn: 'setupSourceCode') {
	new File("$projectDir/src/main/resources/com/ezekielnewren/papercode/resource/about.txt").text = """version $version
buildtime ${Long.toString(System.currentTimeMillis())}
name $project.name
"""
}

jar {
	manifest {
		attributes("Implementation-Version": version,
		"Main-Class": mainClassName)
	}
	
	from {
		configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
	}

	exclude('ignore/','META-INF/')
	baseName = project.name
	version = version
}
